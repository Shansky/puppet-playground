#!/bin/bash

toasterdir='toasters/'

showhelp () {
cat << EOF
Play with Puppet code.
Your playground is modules/* and manifests/init.pp 

Usage: $0 <action> [argument]
$0 list              - List available toasters 
$0 install <toaster> - Install the specified toaster on the playground
$0 status            - Show active playground status
$0 run [toaster]     - Run current playground
$0 clean             - Clean up the playground
$0 setup example42   - Install the full Example42 modules set
$0 puppi <command>   - Execute puppi commands on running boxes
EOF
}

SETCOLOR_NORMAL="echo -en \\033[0;39m"
SETCOLOR_TITLE="echo -en \\033[0;35m"
SETCOLOR_BOLD="echo -en \\033[0;1m"

echo_title () {
 echo
 $SETCOLOR_BOLD ; echo $1 ; $SETCOLOR_NORMAL
}

list_toaster() {
  echo_title "Available toasters for $0 install"
  ls -1 $toasterdir
}

install_toaster() {
  echo_title "Placing toaster files in the Playground"  
  cp -f $toasterdir/$toaster/Puppetfile Puppetfile
  cp -f $toasterdir/$toaster/init.pp manifests/init.pp
  echo_title "Running librarian-puppet install"  
  librarian-puppet install
}

run_toaster() {
  echo_title "Running the playground (vagrant provision ;-)"
  vagrant provision
}

run_puppi() {
  echo_title "Running puppi $puppi_action on the boxes in the playground"
  for vm in $(vagrant status | grep 'running$' | cut -d ' ' -f 1 ) ; do
    vagrant ssh $vm -c "sudo puppi $puppi_action"
  done
}

setup_example42() {
  clean
  echo_title "Setting up Example42 NetGen modules"
  git submodule init
  git submodule update

  echo_title "Cloning modules from GitHub repo"
  cd modules 
  git submodule init
  git submodule update
}

clean() {
  echo "I'm going to wipe out the Playground: the modules/ dir, manifests/init.pp and Puppetfile... Are you Sure? (y/N)"
  read answer
  if [ "x$answer" == "xy" ] ; then
    echo_title "Removing modules dir, manifests/init.pp and Puppetfile from the Playground"
    rm -rf modules/
    rm -f Puppetfile
    rm -f Puppetfile.lock
    rm -f manifests/init.pp
  fi
}

status() {
  echo_title "Modules status (puppet module list --modulepath=modules/) "
  puppet module list --modulepath=modules/

  echo_title "Modules status (librarian-puppet show) "
  librarian-puppet show

  echo_title "Content of modules/ directory "
  ls -l modules/
  
  echo_title "Content of manifests/init.pp"
  cat manifests/init.pp
}

while [ $# -gt 0 ]; do
  case "$1" in
    list)
      action=$1
      shift
      ;;
    clean)
      action=$1
      shift
      ;;
    status)
      action=$1
      shift
      ;;
    install)
      action=$1
      toaster=$2
      shift 2
      ;;
    run)
      action=$1
      toaster=$2
      shift 2
      ;;
    setup)
      action=$1
      setup_action=$2
      shift 2
      ;;
    puppi)
      action=$1
      puppi_action=$2
      shift 2
      ;;
    *)
      showhelp
      exit
      ;;
  esac
done

case $action in 
  list) list_toaster ;;
  install) install_toaster ;;
  clean) clean ;;
  status) status ;;
  run ) install_toaster ; run_toaster ;;
  setup ) setup_$setup_action ;;
  puppi ) run_puppi ;;
  * ) showhelp ;;
esac

